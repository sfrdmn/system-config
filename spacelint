#!/usr/bin/env python
import logging
import argparse
import os

DEFAULT_EXPANDSIZE = 2;
MAX_FILE_SIZE_BYTES = 33554432; # 32MB
MAX_FILE_SIZE_MEGABYTES = MAX_FILE_SIZE_BYTES / 1048576;

parser = argparse.ArgumentParser(description='Expand tabs to spaces and remove trailing white space!')
parser.add_argument('-t', dest='expandsize', action='store', default=DEFAULT_EXPANDSIZE,
    help='the number of spaces to expand each tab. defaults to {0}'.format(DEFAULT_EXPANDSIZE))
parser.add_argument('paths', metavar='FILE', type=str, nargs='+',
    help='files to be linted. maximum size of any given file is {0}MB'.format(MAX_FILE_SIZE_MEGABYTES))

args = parser.parse_args()

for path in args.paths:
  file_size = os.stat(path).st_size
  if file_size > MAX_FILE_SIZE_BYTES:
    logging.warning('Skipping {0} because it TOO BIG DOOD'.format(path))
    continue
  output = []
  with open(path, 'r') as f:
    lines = f.readlines()
    for line in lines:
      line = line.rstrip()
      line += '\n'
      line = line.expandtabs(int(args.expandsize))
      output.append(line)
  f.close()

  with open(path, 'w+') as f:
    f.writelines(output)
  f.close()
